generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Menu {
  id           Int        @id @default(autoincrement())
  label        String
  icon         String?
  to           String?
  class        String?
  url          String?
  target       String?
  badge        String?
  preventExact Boolean    @default(false)
  order        Int        @default(0)
  parentId     Int?
  parent       Menu?      @relation("MenuToMenu", fields: [parentId], references: [id])
  children     Menu[]     @relation("MenuToMenu")
  menuRoles    MenuRole[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now())
}

model Role {
  id        Int        @id @default(autoincrement())
  name      String
  menuRoles MenuRole[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
}

model MenuRole {
  menu      Menu     @relation(fields: [menuId], references: [id])
  menuId    Int
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@id([menuId, roleId])
}

model Work {
  id        Int        @id @default(autoincrement())
  uid       String
  title     String
  year      Int
  month     Int
  date      Int
  week      Int
  time      Int        @default(0)
  tag       String?
  workItems WorkItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
}

model WorkItem {
  itemId    Int      @id @default(autoincrement())
  content   String
  time      Int      @default(0)
  work      Work     @relation(fields: [workId], references: [id])
  workId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model JobScrap {
  id          Int      @id @default(autoincrement())
  company     String
  title       String
  position    String
  requirement String?
  stratDate   DateTime
  endDate     DateTime
  link        String
  isConfirm   Boolean  @default(false)
  linkId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  // @@unique([company, linkId])
}

model NewsletterScrap {
  id              Int      @id @default(autoincrement())
  title           String
  source          String
  sourceUniqueKey String?
  sourceLink      String?
  originLink      String?
  summary         String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
}
