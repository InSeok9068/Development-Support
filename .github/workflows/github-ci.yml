# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI_Development-Support

on:
  push:
    branches: ["release"]

jobs:
  build:
    runs-on: [self-hosted]

    strategy:
      matrix:
        node-version: [18.15.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      # - uses: actions/checkout@v3
      # - name: Use Node.js ${{ matrix.node-version }}

      - name: stop old server (ignore error)
        run: |
          killall -9 node || true

      - name: git pull
        run: |
          cd /home/ubuntu/Development-Support
          git pull

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}

      - name: frontend npm install
        run: npm install
        working-directory: /home/ubuntu/Development-Support/frontend

      - name: backend npm install
        run: npm install
        working-directory: /home/ubuntu/Development-Support/backend

      - name: frontend npm build
        run: npm run build --if-present
        working-directory: /home/ubuntu/Development-Support/frontend

      - name: backend npm build
        run: npm run build --if-present
        working-directory: /home/ubuntu/Development-Support/backend

      - name: run new server (in background)
        env:
          RUNNER_TRACKING_ID: ""
        run: |
          cd /home/ubuntu/Development-Support/backend
          nohup npm run start </dev/null >/dev/null 2>&1 &

      # - name: SSH Action
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     port: ${{ secrets.SSH_PORT }}
      #     script: |
      #       cd /home/ubuntu/Development-Support
      #       git pull
      #       cd /home/ubuntu/Development-Support/frontend
      #       npm install
      #       npm run build
      #       cd /home/ubuntu/Development-Support/backend
      #       npm install
      #       nohup npm run start </dev/null >/dev/null 2>&1 &
